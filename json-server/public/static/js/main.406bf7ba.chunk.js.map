{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/CommentFormComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","key","id","object","About","leaders","map","to","active","title","list","RenderMenuItem","onClick","width","Menu","menu","dishes","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","console","log","JSON","stringify","alert","dishId","postComment","rating","author","comment","len","outline","isOpen","toggle","onSubmit","htmlFor","md","select","model","text","placeholder","validators","required","val","length","minLength","maxLength","show","messages","textarea","rows","type","color","Component","RenderDish","top","RenderComments","comments","commentDisplay","unformattedDate","date","Date","toLocaleDateString","DishDetail","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","isNumber","isNaN","Number","validEmail","test","size","offset","check","checkbox","Header","toggleNav","handleLogin","isNavOpen","event","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesLoading","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.406bf7ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","export const baseUrl = 'http://localhost:3001/';","import React from 'react'\r\nimport { Card, CardBody, CardImg, CardText, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if(isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <FadeTransform in transformProps = {{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishLoading} errMess={props.dishErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return (\r\n        <li className=\"media\" key={leader.id}>\r\n            <Media className=\"mr-4\" object src={baseUrl + leader.image} alt={leader.name} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-1 mb-1\">{leader.name}</h5>\r\n                <p>{leader.designation}</p>\r\n                <p className=\"mb-4\">{leader.description}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = (() => {\r\n        if (props.leaders.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n        else if (props.leaders.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n        else {\r\n            return (\r\n                <div>\r\n                    <Stagger in>\r\n                        {\r\n                            props.leaders.leaders.map((leader) => {\r\n                                return(\r\n                                    <Fade in>\r\n                                        <RenderLeader leader={leader} />\r\n                                    </Fade>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Stagger>\r\n                </div>\r\n            );\r\n        }\r\n    })();\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n} \r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => { \r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> <Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState ({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Data entered is: ' + JSON.stringify(values));\r\n        alert('Data entered is: ' + JSON.stringify(values) + ' The dish is: ' + this.props.dishId);\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        this.toggleModal();\r\n    }\r\n\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                <span className=\"fa fa-pencil fa-lg\"> Submit Comment</span>\r\n                </Button> \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody> \r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}> \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}><strong>Rating</strong></Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" \r\n                                        className=\"form-control\"> {' '}\r\n                                        <option>1</option>    \r\n                                        <option>2</option>   \r\n                                        <option>3</option>   \r\n                                        <option>4</option>   \r\n                                        <option>5</option>            \r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}><strong>Your Name</strong></Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    placeholder=\"Your Name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}><strong>Comment</strong></Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\"\r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentForm;","import React from 'react';\r\nimport { Card, CardImg, CardTitle, CardText, CardBody, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport CommentFrom from './CommentFormComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction formatDate(unformattedDate) {\r\n    const date = new Date(unformattedDate);\r\n    return (date.toLocaleDateString('en-us', {'year': 'numeric', 'month': 'short', 'day': '2-digit'}));\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <FadeTransform in transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );        \r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    const commentDisplay = comments.map((comment) => {\r\n        if(comment.comment === null || comment.comment.length === 0) {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        return (\r\n            <Stagger in>\r\n                <Fade in>\r\n                    <li key={comment.id}>\r\n                        <strong>\r\n                        <p> {comment.comment} </p>\r\n                        <p>-- {comment.author} , {formatDate(comment.date)}</p>\r\n                        </strong>\r\n                    </li>\r\n                </Fade>\r\n            </Stagger>\r\n            );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                {commentDisplay}\r\n            </ul>\r\n            <CommentFrom dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else if(props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if(props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> <Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current state is: ' + JSON.stringify(values));\r\n        alert('Current state is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message)\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> <Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype:username?call\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}> \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\"First Name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                    placeholder=\"Last Name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                    placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(10), isNumber\r\n                                    }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 10 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                    placeholder=\"Email\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6, offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                            className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>            \r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3, offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" \r\n                                    className=\"form-control\"> {' '}\r\n                                        <option>Tel. Num</option>    \r\n                                        <option>Email</option>            \r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\"\r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {Nav, Navbar, NavbarBrand, NavItem, NavbarToggler, Collapse, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, \r\nFormGroup, Input, Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState ({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState ({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"> Home </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"> About </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"> Menu </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"> Contact </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <Nav className=\"ml-auto\">\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody> \r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"username\">Username</label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" \r\n                                innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"password\">Username</label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" \r\n                                innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}  />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    } \r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { \r\n        console.log('post comments', error.message);\r\n        alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    } \r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error => { \r\n        console.log('post feedback', error.message);\r\n        alert(\"Your feedback could not be sent\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response; \r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        // var errmess = new Error(error.message);\r\n        throw error;\r\n    } \r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        // var errmess = new Error(error.message);\r\n        throw error;\r\n    } \r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    } \r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response; \r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        // var errmess = new Error(error.message);\r\n        throw error;\r\n    } \r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition} from 'react-transition-group';\r\n \r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    } \r\n\r\n    const DishWithID = ({match}) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n            <Switch>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                <Route path=\"/menu/:dishId\" component={DishWithID} />\r\n                <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as Action_Types from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case Action_Types.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case Action_Types.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case Action_Types.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};   \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as Action_Types from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case Action_Types.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case Action_Types.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n        case Action_Types.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as Action_Types from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case Action_Types.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case Action_Types.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case Action_Types.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: '',\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider> \n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport { InitialFeedback } from './forms';\r\nimport { createForms } from 'react-redux-form';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        \r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}